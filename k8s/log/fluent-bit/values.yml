serviceAccount:
  create: false  # eksctl로 생성한 ServiceAccount 사용
  name: fluent-bit

# 메인 설정
config:
  service: |
    [SERVICE]
        Parsers_File parsers.conf
        HTTP_Server  On
        HTTP_Listen  0.0.0.0
        HTTP_Port    2020
  # Parsers_File: 로그 파싱 규칙이 정의된 파일을 지정
  # HTTP_Server: 헬스체크를 위한 HTTP 서버 기능 활성화
  # HTTP_Listen: 모든 IP에서 접근 허용
  # HTTP_Port: HTTP 서버 포트 지정

  # 로그 수집 설정
  inputs: |
    [INPUT]
        Name                tail
        Path               /var/log/containers/*.log
        multiline.parser   docker, cri
        Tag                kube.*
        Mem_Buf_Limit      5MB
        Skip_Long_Lines    On
  # Name: tail 입력 플러그인 사용
  # Path: 컨테이너 로그 파일 경로 지정
  # multiline.parser: 도커와 CRI 형식의 멀티라인 로그 파싱
  # Tag: 수집된 로그에 kube.* 태그 부여
  # Mem_Buf_Limit: 메모리 버퍼 제한 설정
  # Skip_Long_Lines: 긴 로그 라인 스킵 활성화


  # 쿠버네티스 메타데이터 필터 설정
  filters: |
    [FILTER]
        Name                  kubernetes
        Match                 kube.*
        Merge_Log             On
        Keep_Log              On
        K8S-Logging.Parser    On
        K8S-Logging.Exclude   Off
  # Name: 쿠버네티스 메타데이터 필터 사용
  # Match: kube.* 태그를 가진 로그에 적용
  # Merge_Log: JSON 로그를 메시지 필드에 병합
  # Keep_Log: 원본 로그 메시지 삭제
  # K8S-Logging.Parser: 쿠버네티스 로깅 파서 활성화
  # K8S-Logging.Exclude: 특정 로그 제외 기능 활성화


  # CloudWatch 출력 설정
  outputs: |
    [OUTPUT]
        Name              cloudwatch_logs
        Match             kube.*
        region            ap-northeast-2
        log_group_name    /aws/containerinsights/my-cluster1/application
        log_stream_prefix ${kubernetes['namespace_name']}/${kubernetes['pod_name']}/
        auto_create_group true
        retry_limit       3
    
    [OUTPUT]
        Name              cloudwatch_logs
        Match             dataplane.*
        region            ap-northeast-2
        log_group_name    /aws/containerinsights/my-cluster1/performance
        log_stream_prefix ${kubernetes['namespace_name']}/${kubernetes['pod_name']}/
        auto_create_group true
        retry_limit       3
    
    [OUTPUT]
        Name              cloudwatch_logs
        Match             host.*
        region            ap-northeast-2
        log_group_name    /aws/eks/my-cluster1/fluent-bit
        log_stream_prefix ${kubernetes['namespace_name']}/${kubernetes['pod_name']}/
        auto_create_group true
        retry_limit       3




  # Name: CloudWatch 출력 플러그인 사용
  # Match: 모든 로그 매칭
  # region: AWS 리전 설정
  # log_group_name: CloudWatch 로그 그룹 이름
  # log_stream_prefix: 로그 스트림 접두사
  # auto_create_group: 로그 그룹 자동 생성
  # retry_limit: 재시도 제한 없음

# 리소스 제한 설정
resources:
  limits:
    memory: 128Mi  # 최대 메모리 제한
    cpu: 100m     # 최대 CPU 제한
  requests:
    memory: 128Mi  # 요청 메모리
    cpu: 100m     # 요청 CPU


# 추가 보안 설정
tolerations:
  - operator: "Exists"  # 모든 노드 허용 설정

# 볼륨 마운트 설정
volumes:
  - name: varlog  # 로그 볼륨
    hostPath:
      path: /var/log
  - name: varlibdockercontainers  # 도커 컨테이너 로그 볼륨
    hostPath:
      path: /var/lib/docker/containers

volumeMounts:
  - name: varlog  # 로그 볼륨 마운트
    mountPath: /var/log
  - name: varlibdockercontainers  # 도커 로그 볼륨 마운트
    mountPath: /var/lib/docker/containers
    readOnly: true  # 읽기 전용 설정

